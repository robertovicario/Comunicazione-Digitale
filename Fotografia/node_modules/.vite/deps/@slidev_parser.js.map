{
  "version": 3,
  "sources": ["../../@slidev/parser/dist/chunk-7UHTFYFF.mjs"],
  "sourcesContent": ["// src/core.ts\nimport YAML from \"js-yaml\";\n\n// ../../node_modules/.pnpm/@antfu+utils@0.7.6/node_modules/@antfu/utils/dist/index.mjs\nfunction toArray(array) {\n  array = array ?? [];\n  return Array.isArray(array) ? array : [array];\n}\nfunction uniq(array) {\n  return Array.from(new Set(array));\n}\nfunction range(...args) {\n  let start, stop, step;\n  if (args.length === 1) {\n    start = 0;\n    step = 1;\n    [stop] = args;\n  } else {\n    [start, stop, step = 1] = args;\n  }\n  const arr = [];\n  let current = start;\n  while (current < stop) {\n    arr.push(current);\n    current += step || 1;\n  }\n  return arr;\n}\nvar toString = (v) => Object.prototype.toString.call(v);\nfunction notNullish(v) {\n  return v != null;\n}\nfunction isTruthy(v) {\n  return Boolean(v);\n}\nvar isNumber = (val) => typeof val === \"number\";\nvar isObject = (val) => toString(val) === \"[object Object]\";\nfunction objectMap(obj, fn) {\n  return Object.fromEntries(\n    Object.entries(obj).map(([k, v]) => fn(k, v)).filter(notNullish)\n  );\n}\nvar Node = class {\n  value;\n  next;\n  constructor(value) {\n    this.value = value;\n  }\n};\nvar Queue = class {\n  #head;\n  #tail;\n  #size;\n  constructor() {\n    this.clear();\n  }\n  enqueue(value) {\n    const node = new Node(value);\n    if (this.#head) {\n      this.#tail.next = node;\n      this.#tail = node;\n    } else {\n      this.#head = node;\n      this.#tail = node;\n    }\n    this.#size++;\n  }\n  dequeue() {\n    const current = this.#head;\n    if (!current) {\n      return;\n    }\n    this.#head = this.#head.next;\n    this.#size--;\n    return current.value;\n  }\n  clear() {\n    this.#head = void 0;\n    this.#tail = void 0;\n    this.#size = 0;\n  }\n  get size() {\n    return this.#size;\n  }\n  *[Symbol.iterator]() {\n    let current = this.#head;\n    while (current) {\n      yield current.value;\n      current = current.next;\n    }\n  }\n};\nvar VOID = Symbol(\"p-void\");\n\n// src/utils.ts\nfunction parseRangeString(total, rangeStr) {\n  if (!rangeStr || rangeStr === \"all\" || rangeStr === \"*\")\n    return range(1, total + 1);\n  const pages = [];\n  for (const part of rangeStr.split(/[,;]/g)) {\n    if (!part.includes(\"-\")) {\n      pages.push(+part);\n    } else {\n      const [start, end] = part.split(\"-\", 2);\n      pages.push(\n        ...range(+start, !end ? total + 1 : +end + 1)\n      );\n    }\n  }\n  return uniq(pages).filter((i) => i <= total).sort((a, b) => a - b);\n}\nfunction parseAspectRatio(str) {\n  if (isNumber(str))\n    return str;\n  if (!Number.isNaN(+str))\n    return +str;\n  const [wStr = \"\", hStr = \"\"] = str.split(/[:\\/x\\|]/);\n  const w = Number.parseFloat(wStr.trim());\n  const h = Number.parseFloat(hStr.trim());\n  if (Number.isNaN(w) || Number.isNaN(h) || h === 0)\n    throw new Error(`Invalid aspect ratio \"${str}\"`);\n  return w / h;\n}\n\n// src/config.ts\nfunction getDefaultConfig() {\n  return {\n    theme: \"default\",\n    title: \"Slidev\",\n    titleTemplate: \"%s - Slidev\",\n    addons: [],\n    remoteAssets: false,\n    monaco: \"dev\",\n    download: false,\n    export: {},\n    info: false,\n    highlighter: \"prism\",\n    lineNumbers: false,\n    colorSchema: \"auto\",\n    routerMode: \"history\",\n    aspectRatio: 16 / 9,\n    canvasWidth: 980,\n    exportFilename: \"\",\n    selectable: false,\n    themeConfig: {},\n    fonts: {},\n    favicon: \"https://cdn.jsdelivr.net/gh/slidevjs/slidev/assets/favicon.png\",\n    drawings: {},\n    plantUmlServer: \"https://www.plantuml.com/plantuml\",\n    codeCopy: true,\n    record: \"dev\",\n    css: \"unocss\",\n    presenter: true,\n    htmlAttrs: {},\n    transition: void 0,\n    editor: true\n  };\n}\nfunction resolveConfig(headmatter, themeMeta = {}, filepath, verify = false) {\n  const themeHightlighter = [\"prism\", \"shiki\"].includes(themeMeta.highlighter || \"\") ? themeMeta.highlighter : void 0;\n  const themeColorSchema = [\"light\", \"dark\"].includes(themeMeta.colorSchema || \"\") ? themeMeta.colorSchema : void 0;\n  const defaultConfig = getDefaultConfig();\n  const config = {\n    ...defaultConfig,\n    highlighter: themeHightlighter || defaultConfig.highlighter,\n    colorSchema: themeColorSchema || defaultConfig.colorSchema,\n    ...themeMeta.defaults,\n    ...headmatter.config,\n    ...headmatter,\n    fonts: resolveFonts({\n      ...themeMeta.defaults?.fonts,\n      ...headmatter.config?.fonts,\n      ...headmatter?.fonts\n    }),\n    drawings: resolveDrawings(headmatter.drawings, filepath),\n    htmlAttrs: {\n      ...themeMeta.defaults?.htmlAttrs,\n      ...headmatter.config?.htmlAttrs,\n      ...headmatter?.htmlAttrs\n    }\n  };\n  if (config.colorSchema !== \"dark\" && config.colorSchema !== \"light\")\n    config.colorSchema = \"auto\";\n  if (themeColorSchema && config.colorSchema === \"auto\")\n    config.colorSchema = themeColorSchema;\n  config.aspectRatio = parseAspectRatio(config.aspectRatio);\n  if (verify)\n    verifyConfig(config, themeMeta);\n  return config;\n}\nfunction verifyConfig(config, themeMeta = {}, warn = (v) => console.warn(`[slidev] ${v}`)) {\n  const themeHightlighter = [\"prism\", \"shiki\"].includes(themeMeta.highlighter || \"\") ? themeMeta.highlighter : void 0;\n  const themeColorSchema = [\"light\", \"dark\"].includes(themeMeta.colorSchema || \"\") ? themeMeta.colorSchema : void 0;\n  if (themeColorSchema && config.colorSchema !== themeColorSchema)\n    warn(`Color schema \"${config.colorSchema}\" does not supported by the theme`);\n  if (themeHightlighter && config.highlighter !== themeHightlighter)\n    warn(`Syntax highlighter \"${config.highlighter}\" does not supported by the theme`);\n  if (![\"windicss\", \"unocss\", void 0].includes(config.css)) {\n    warn(`Unsupported Atomic CSS engine \"${config.css}\", fallback to UnoCSS`);\n    config.css = \"unocss\";\n  }\n}\nfunction resolveFonts(fonts = {}) {\n  const {\n    fallbacks = true,\n    italic = false,\n    provider = \"google\"\n  } = fonts;\n  let sans = toArray(fonts.sans).flatMap((i) => i.split(/,\\s*/g)).map((i) => i.trim());\n  let serif = toArray(fonts.serif).flatMap((i) => i.split(/,\\s*/g)).map((i) => i.trim());\n  let mono = toArray(fonts.mono).flatMap((i) => i.split(/,\\s*/g)).map((i) => i.trim());\n  const weights = toArray(fonts.weights || \"200,400,600\").flatMap((i) => i.toString().split(/,\\s*/g)).map((i) => i.trim());\n  const custom = toArray(fonts.custom).flatMap((i) => i.split(/,\\s*/g)).map((i) => i.trim());\n  const local = toArray(fonts.local).flatMap((i) => i.split(/,\\s*/g)).map((i) => i.trim());\n  const webfonts = fonts.webfonts ? fonts.webfonts : fallbacks ? uniq([...sans, ...serif, ...mono, ...custom]) : [];\n  webfonts.filter((i) => local.includes(i));\n  function toQuoted(font) {\n    if (/^(['\"]).*\\1$/.test(font))\n      return font;\n    return `\"${font}\"`;\n  }\n  if (fallbacks) {\n    sans = uniq([\n      ...sans.map(toQuoted),\n      \"ui-sans-serif\",\n      \"system-ui\",\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      '\"Noto Sans\"',\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n      '\"Noto Color Emoji\"'\n    ]);\n    serif = uniq([\n      ...serif.map(toQuoted),\n      \"ui-serif\",\n      \"Georgia\",\n      \"Cambria\",\n      '\"Times New Roman\"',\n      \"Times\",\n      \"serif\"\n    ]);\n    mono = uniq([\n      ...mono.map(toQuoted),\n      \"ui-monospace\",\n      \"SFMono-Regular\",\n      \"Menlo\",\n      \"Monaco\",\n      \"Consolas\",\n      '\"Liberation Mono\"',\n      '\"Courier New\"',\n      \"monospace\"\n    ]);\n  }\n  return {\n    sans,\n    serif,\n    mono,\n    webfonts,\n    provider,\n    local,\n    italic,\n    weights\n  };\n}\nfunction resolveDrawings(options = {}, filepath) {\n  const {\n    enabled = true,\n    persist = false,\n    presenterOnly = false,\n    syncAll = true\n  } = options;\n  const persistPath = typeof persist === \"string\" ? persist : persist ? `.slidev/drawings${filepath ? `/${filepath.match(/([^\\\\\\/]+?)(\\.\\w+)?$/)?.[1]}` : \"\"}` : false;\n  return {\n    enabled,\n    persist: persistPath,\n    presenterOnly,\n    syncAll\n  };\n}\n\n// src/core.ts\nfunction stringify(data) {\n  return `${data.slides.filter((slide) => slide.source === void 0 || slide.inline !== void 0).map((slide, idx) => stringifySlide(slide.inline || slide, idx)).join(\"\\n\").trim()}\n`;\n}\nfunction filterDisabled(data) {\n  data.slides = data.slides.filter((i) => !i.frontmatter?.disabled);\n  return data;\n}\nfunction stringifySlide(data, idx = 0) {\n  if (data.raw == null)\n    prettifySlide(data);\n  return data.raw.startsWith(\"---\") || idx === 0 ? data.raw : `---\n${data.raw.startsWith(\"\\n\") ? data.raw : `\n${data.raw}`}`;\n}\nfunction prettifySlide(data) {\n  data.content = `\n${data.content.trim()}\n`;\n  data.raw = Object.keys(data.frontmatter || {}).length ? `---\n${YAML.dump(data.frontmatter).trim()}\n---\n${data.content}` : data.content;\n  if (data.note)\n    data.raw += `\n<!--\n${data.note.trim()}\n-->\n`;\n  else\n    data.raw += \"\\n\";\n  return data;\n}\nfunction prettify(data) {\n  data.slides.forEach(prettifySlide);\n  return data;\n}\nfunction matter(code) {\n  let data = {};\n  const content = code.replace(\n    /^---.*\\r?\\n([\\s\\S]*?)---/,\n    (_, d) => {\n      data = YAML.load(d);\n      if (!isObject(data))\n        data = {};\n      return \"\";\n    }\n  );\n  return { data, content };\n}\nfunction detectFeatures(code) {\n  return {\n    katex: !!code.match(/\\$.*?\\$/) || !!code.match(/$\\$\\$/),\n    monaco: !!code.match(/{monaco.*}/),\n    tweet: !!code.match(/<Tweet\\b/),\n    mermaid: !!code.match(/^```mermaid/m)\n  };\n}\nfunction parseSlide(raw) {\n  const result = matter(raw);\n  let note;\n  const frontmatter = result.data || {};\n  let content = result.content.trim();\n  const comments = Array.from(content.matchAll(/<!--([\\s\\S]*?)-->/g));\n  if (comments.length) {\n    const last = comments[comments.length - 1];\n    if (last.index !== void 0 && last.index + last[0].length >= content.length) {\n      note = last[1].trim();\n      content = content.slice(0, last.index).trim();\n    }\n  }\n  let title;\n  let level;\n  if (frontmatter.title || frontmatter.name) {\n    title = frontmatter.title || frontmatter.name;\n  } else {\n    const match = content.match(/^(#+) (.*)$/m);\n    title = match?.[2]?.trim();\n    level = match?.[1]?.length;\n  }\n  if (frontmatter.level)\n    level = frontmatter.level || 1;\n  return {\n    raw,\n    title,\n    level,\n    content,\n    frontmatter,\n    note\n  };\n}\nasync function parse(markdown, filepath, themeMeta, extensions, onHeadmatter) {\n  const lines = markdown.split(/\\r?\\n/g);\n  const slides = [];\n  let start = 0;\n  async function slice(end) {\n    if (start === end)\n      return;\n    const raw = lines.slice(start, end).join(\"\\n\");\n    const slide = {\n      ...parseSlide(raw),\n      index: slides.length,\n      start,\n      end\n    };\n    if (extensions) {\n      for (const e of extensions) {\n        if (e.transformSlide) {\n          const newContent = await e.transformSlide(slide.content, slide.frontmatter);\n          if (newContent !== void 0)\n            slide.content = newContent;\n        }\n      }\n    }\n    slides.push(slide);\n    start = end + 1;\n  }\n  {\n    let hm = \"\";\n    if (lines[0].match(/^---([^-].*)?$/) && !lines[1]?.match(/^\\s*$/)) {\n      let hEnd = 1;\n      while (hEnd < lines.length && !lines[hEnd].trimEnd().match(/^---$/))\n        hEnd++;\n      hm = lines.slice(1, hEnd).join(\"\\n\");\n    }\n    if (onHeadmatter) {\n      const o = YAML.load(hm) ?? {};\n      extensions = await onHeadmatter(o, extensions ?? [], filepath);\n    }\n  }\n  if (extensions) {\n    for (const e of extensions) {\n      if (e.transformRawLines)\n        await e.transformRawLines(lines);\n    }\n  }\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trimEnd();\n    if (line.match(/^---+/)) {\n      await slice(i);\n      const next = lines[i + 1];\n      if (line.match(/^---([^-].*)?$/) && !next?.match(/^\\s*$/)) {\n        start = i;\n        for (i += 1; i < lines.length; i++) {\n          if (lines[i].trimEnd().match(/^---$/))\n            break;\n        }\n      }\n    } else if (line.startsWith(\"```\")) {\n      for (i += 1; i < lines.length; i++) {\n        if (lines[i].startsWith(\"```\"))\n          break;\n      }\n    }\n  }\n  if (start <= lines.length - 1)\n    await slice(lines.length);\n  const headmatter = slides[0]?.frontmatter || {};\n  headmatter.title = headmatter.title || slides[0]?.title;\n  const config = resolveConfig(headmatter, themeMeta, filepath);\n  const features = detectFeatures(markdown);\n  return {\n    raw: markdown,\n    filepath,\n    slides,\n    config,\n    features,\n    headmatter,\n    themeMeta\n  };\n}\nfunction mergeFeatureFlags(a, b) {\n  return objectMap(a, (k, v) => [k, v || b[k]]);\n}\nfunction scanMonacoModules(md) {\n  const typeModules = /* @__PURE__ */ new Set();\n  md.replace(/^```(\\w+?)\\s*{monaco([\\w:,-]*)}[\\s\\n]*([\\s\\S]+?)^```/mg, (full, lang = \"ts\", options, code) => {\n    options = options || \"\";\n    lang = lang.trim();\n    if (lang === \"ts\" || lang === \"typescript\") {\n      Array.from(code.matchAll(/\\s+from\\s+([\"'])([\\/\\w@-]+)\\1/g)).map((i) => i[2]).filter(isTruthy).map((i) => typeModules.add(i));\n    }\n    return \"\";\n  });\n  return Array.from(typeModules);\n}\n\nexport {\n  parseRangeString,\n  parseAspectRatio,\n  getDefaultConfig,\n  resolveConfig,\n  verifyConfig,\n  resolveFonts,\n  stringify,\n  filterDisabled,\n  stringifySlide,\n  prettifySlide,\n  prettify,\n  detectFeatures,\n  parseSlide,\n  parse,\n  mergeFeatureFlags,\n  scanMonacoModules\n};\n"],
  "mappings": "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",
  "names": ["_a"]
}
